<UserControl
    x:Class="SocketDebugger.Views.TcpClientView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:cvt="clr-namespace:SocketDebugger.Converts"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:util="clr-namespace:SocketDebugger.Utils"
    xmlns:vm="clr-namespace:SocketDebugger.ViewModels"
    d:DataContext="{d:DesignInstance Type=vm:TcpClientViewModel}"
    d:DesignHeight="600"
    d:DesignWidth="800"
    Background="White"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <cvt:SendMessageButtonStateConvert x:Key="SendMessageButtonStateConvertKey" />
            <cvt:MessageTypeConvert x:Key="MessageTypeConvertKey" />

            <util:ClientChatBubbleSelector x:Key="ClientChatBubbleSelectorKey" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="1" />
            <RowDefinition Height="4*" />
            <RowDefinition Height="1" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="1" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock
                    Grid.Row="0"
                    Margin="10,0"
                    VerticalAlignment="Center"
                    FontSize="14"
                    Text="{Binding SelectedConfigModel.ConnectionTitle}" />

                <TextBlock
                    Grid.Row="1"
                    Margin="10,0"
                    Foreground="Gray">
                    <!--  多重绑定  -->
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0}:{1}">
                            <Binding Path="SelectedConfigModel.ConnectionHost" />
                            <Binding Path="SelectedConfigModel.ConnectionPort" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>

                <StackPanel
                    Grid.Row="2"
                    Margin="10,0"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <Ellipse
                        Width="15"
                        Height="15"
                        Fill="{Binding ConnectColorBrush}" />

                    <TextBlock Margin="5,0,0,0" Text="{Binding ConnectState}" />
                </StackPanel>
            </Grid>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Button
                    Grid.Row="0"
                    Margin="10,10,10,0"
                    HorizontalAlignment="Right"
                    Command="{Binding EditConfigCommand}"
                    Content="编辑" />

                <Button
                    Grid.Row="1"
                    Margin="10"
                    HorizontalAlignment="Right"
                    Command="{Binding ConnectServerCommand}"
                    Content="{Binding ConnectButtonState}"
                    Style="{StaticResource ButtonPrimary}" />

                <Button
                    Grid.Row="2"
                    Margin="10,0,10,10"
                    Command="{Binding ClearMessageCommand}"
                    Content="清空消息" />
            </Grid>
        </Grid>

        <Grid Grid.Row="1" Background="LightGray" />

        <!--  对话显示区域  -->
        <ListBox
            Grid.Row="2"
            BorderThickness="0"
            ItemTemplateSelector="{StaticResource ClientChatBubbleSelectorKey}"
            ItemsSource="{Binding ChatMessages}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled">

            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border Name="ItemContainerBorder">
                                    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                </Style>
            </ListBox.ItemContainerStyle>

            <!--  绑定自定义行为  -->
            <b:Interaction.Behaviors>
                <util:AutoScrollBehavior />
            </b:Interaction.Behaviors>
        </ListBox>

        <Grid Grid.Row="3" Background="LightGray" />

        <Grid Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <RadioButton
                x:Name="TextRadioButton"
                Grid.Column="0"
                Margin="10"
                Content="文本"
                GroupName="ModeGroup"
                IsChecked="{Binding IsTextChecked}" />

            <RadioButton
                Grid.Column="1"
                Content="16进制"
                GroupName="ModeGroup"
                IsChecked="{Binding ElementName=TextRadioButton, Path=IsChecked, Converter={StaticResource MessageTypeConvertKey}}" />

            <Grid
                Grid.Column="2"
                Margin="10,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <CheckBox
                    Grid.Column="0"
                    Content="循环发送"
                    IsChecked="{Binding IsCycleChecked}">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Checked">
                            <b:InvokeCommandAction Command="{Binding CycleCheckedCommand}" />
                        </b:EventTrigger>

                        <b:EventTrigger EventName="Unchecked">
                            <b:InvokeCommandAction Command="{Binding CycleUncheckedCommand}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </CheckBox>

                <TextBox
                    Grid.Column="1"
                    Width="60"
                    Margin="10,0"
                    VerticalContentAlignment="Center"
                    hc:InfoElement.ShowClearButton="True"
                    Text="{Binding MessageCycleTime}" />

                <TextBlock
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    Text="ms" />
            </Grid>

            <Button
                Grid.Column="3"
                Margin="5,0"
                Command="{Binding SendMessageCommand}"
                Content="发送"
                IsEnabled="{Binding IsCycleChecked, Converter={StaticResource SendMessageButtonStateConvertKey}}"
                Style="{StaticResource ButtonSuccess}" />
        </Grid>

        <Grid Grid.Row="5" Background="LightGray" />

        <!--  输入显示区域  -->
        <TextBox
            Grid.Row="6"
            Padding="4,2"
            VerticalContentAlignment="Top"
            hc:InfoElement.ShowClearButton="True"
            AcceptsReturn="True"
            BorderThickness="0"
            Text="{Binding UserInputText}"
            TextWrapping="Wrap"
            VerticalScrollBarVisibility="Auto" />
    </Grid>
</UserControl>