<UserControl
    x:Class="SocketDebugger.Views.SerialPortView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:cvt="clr-namespace:SocketDebugger.Converts"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:util="clr-namespace:SocketDebugger.Utils"
    xmlns:vm="clr-namespace:SocketDebugger.ViewModels"
    d:DataContext="{d:DesignInstance Type=vm:SerialPortViewModel}"
    d:DesignHeight="600"
    d:DesignWidth="800"
    Background="White"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <cvt:SendMessageButtonStateConvert x:Key="SendMessageButtonStateConvertKey" />
            <cvt:SerialPortConfigStateConvert x:Key="SerialPortConfigStateConvertKey" />

            <util:ClientChatBubbleSelector x:Key="ClientChatBubbleSelectorKey" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="1" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="1" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <StackPanel
                Grid.Row="0"
                Margin="15"
                Orientation="Vertical">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="串口号：" />

                    <ComboBox
                        x:Name="PortNameComboBox"
                        Grid.Column="1"
                        Height="30"
                        FontSize="16"
                        IsEnabled="{Binding IsPortOpen, Converter={StaticResource SerialPortConfigStateConvertKey}}"
                        ItemsSource="{Binding PortNameArray}"
                        SelectedIndex="0">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectionChanged">
                                <b:InvokeCommandAction Command="{Binding PortItemSelectedCommand}" CommandParameter="{Binding ElementName=PortNameComboBox, Path=SelectedItem}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                </Grid>

                <Grid Margin="0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="波特率：" />

                    <ComboBox
                        x:Name="BaudRateComboBox"
                        Grid.Column="1"
                        Height="30"
                        FontSize="16"
                        IsEnabled="{Binding IsPortOpen, Converter={StaticResource SerialPortConfigStateConvertKey}}"
                        ItemsSource="{Binding BaudRateArray}"
                        SelectedIndex="0">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectionChanged">
                                <b:InvokeCommandAction Command="{Binding BaudRateItemSelectedCommand}" CommandParameter="{Binding ElementName=BaudRateComboBox, Path=SelectedItem}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="数据位：" />

                    <ComboBox
                        x:Name="DataBitComboBox"
                        Grid.Column="1"
                        Height="30"
                        FontSize="16"
                        IsEnabled="{Binding IsPortOpen, Converter={StaticResource SerialPortConfigStateConvertKey}}"
                        ItemsSource="{Binding DataBitArray}"
                        SelectedIndex="0">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectionChanged">
                                <b:InvokeCommandAction Command="{Binding DataBitItemSelectedCommand}" CommandParameter="{Binding ElementName=DataBitComboBox, Path=SelectedItem}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                </Grid>

                <Grid Margin="0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="校验位：" />

                    <ComboBox
                        x:Name="ParityComboBox"
                        Grid.Column="1"
                        Height="30"
                        FontSize="16"
                        IsEnabled="{Binding IsPortOpen, Converter={StaticResource SerialPortConfigStateConvertKey}}"
                        ItemsSource="{Binding ParityArray}"
                        SelectedIndex="0">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectionChanged">
                                <b:InvokeCommandAction Command="{Binding ParityItemSelectedCommand}" CommandParameter="{Binding ElementName=ParityComboBox, Path=SelectedItem}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="停止位：" />

                    <ComboBox
                        x:Name="StopBitComboBox"
                        Grid.Column="1"
                        Height="30"
                        FontSize="16"
                        IsEnabled="{Binding IsPortOpen, Converter={StaticResource SerialPortConfigStateConvertKey}}"
                        ItemsSource="{Binding StopBitArray}"
                        SelectedIndex="0">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectionChanged">
                                <b:InvokeCommandAction Command="{Binding StopBitItemSelectedCommand}" CommandParameter="{Binding ElementName=StopBitComboBox, Path=SelectedItem}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ComboBox>
                </Grid>

                <Grid Margin="0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="串口状态：" />

                    <Ellipse
                        Grid.Column="1"
                        Width="18"
                        Height="18"
                        Margin="0,0,15,0"
                        HorizontalAlignment="Left"
                        Fill="{Binding ConnectColorBrush}" />
                </Grid>

                <Button
                    Command="{Binding OpenSerialPortCommand}"
                    Content="{Binding SerialPortState}"
                    Foreground="White" />

                <Button
                    Margin="0,15"
                    Command="{Binding ClearSerialPortCommand}"
                    Content="清空数据"
                    Style="{StaticResource MaterialDesignOutlinedButton}" />
            </StackPanel>
        </Grid>

        <Grid Grid.Column="1" Background="LightGray" />

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="4*" />
                <RowDefinition Height="1" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="1" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <ListView
                Grid.Row="0"
                BorderThickness="0"
                ItemTemplateSelector="{StaticResource ClientChatBubbleSelectorKey}"
                ItemsSource="{Binding ChatMessages}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border
                                        Name="ItemBorder"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="true">
                                        <ContentPresenter
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    </Style>
                </ListView.ItemContainerStyle>

                <b:Interaction.Behaviors>
                    <util:AutoScrollBehavior />
                </b:Interaction.Behaviors>
            </ListView>

            <Grid Grid.Row="1" Background="LightGray" />

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <RadioButton
                    Grid.Column="0"
                    Margin="10"
                    Content="文本"
                    FontSize="14"
                    GroupName="ModeGroup"
                    IsChecked="{Binding IsTextChecked}" />

                <RadioButton
                    Grid.Column="1"
                    Content="16进制"
                    FontSize="14"
                    GroupName="ModeGroup"
                    IsChecked="{Binding IsHexChecked}" />

                <Grid
                    Grid.Column="2"
                    Margin="10,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <CheckBox
                        Grid.Column="0"
                        Content="循环发送"
                        FontSize="14"
                        IsChecked="{Binding IsCycleChecked}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Checked">
                                <b:InvokeCommandAction Command="{Binding CycleCheckedCommand}" />
                            </b:EventTrigger>

                            <b:EventTrigger EventName="Unchecked">
                                <b:InvokeCommandAction Command="{Binding CycleUncheckedCommand}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </CheckBox>

                    <TextBox
                        Grid.Column="1"
                        Width="80"
                        Height="25"
                        Margin="10,0"
                        Padding="3,0"
                        VerticalContentAlignment="Center"
                        md:TextFieldAssist.HasClearButton="True"
                        FontSize="14"
                        Style="{StaticResource MaterialDesignOutlinedTextBox}"
                        Text="{Binding MessageCycleTime}" />

                    <TextBlock
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        FontSize="14"
                        Text="ms" />
                </Grid>

                <Button
                    Grid.Column="3"
                    Height="30"
                    Margin="5,0"
                    Command="{Binding SendMessageCommand}"
                    Content="发送"
                    Foreground="White"
                    IsEnabled="{Binding IsCycleChecked, Converter={StaticResource SendMessageButtonStateConvertKey}}" />
            </Grid>

            <Grid Grid.Row="3" Background="LightGray" />

            <TextBox
                Grid.Row="4"
                Padding="2"
                VerticalContentAlignment="Top"
                md:TextFieldAssist.HasClearButton="True"
                AcceptsReturn="True"
                FontSize="14"
                Text="{Binding UserInputText}"
                TextWrapping="Wrap"
                VerticalScrollBarVisibility="Auto" />
        </Grid>
    </Grid>
</UserControl>